name: Go CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Verify Go mod
        run: go mod tidy && git diff --exit-code go.sum go.mod

      - name: Build project
        run: go build ./...

  test:
    runs-on: ubuntu-latest
    needs: build

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: urlshortener
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 12345
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: 12345
      DB_NAME: urlshortener
      REDIS_ADDR: localhost:6379
      RABBITMQ_URL: amqp://guest:guest@127.0.0.1:5672/
      PORT: 8080

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install Go dependencies
        run: go mod tidy

      - name: Install client tools
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client redis-tools

      - name: Wait for services
        run: |
          until pg_isready -h 127.0.0.1 -p 5432; do sleep 1; done
          until redis-cli -h 127.0.0.1 ping | grep PONG; do sleep 1; done

      - name: Run unit tests
        run: go test ./...

      - name: Start app
        run: |
          go run cmd/worker/main.go &
          go run cmd/server/main.go &
          sleep 5
          curl -f http://127.0.0.1:8080/health || (echo "Health check failed" && exit 1)

      - name: üèÉ‚Äç‚ôÇÔ∏è Run stress test
        run: |
          chmod +x stress_test.sh
          ./stress_test.sh
