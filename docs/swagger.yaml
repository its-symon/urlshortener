definitions:
  handlers.AuthRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.ShortenRequest:
    properties:
      custom_alias:
        type: string
      expires_at:
        type: string
      long_url:
        type: string
    required:
    - long_url
    type: object
  models.ShortenResponse:
    properties:
      click_count:
        type: integer
      created_at:
        type: string
      expires_at:
        type: string
      long_url:
        type: string
      short_code:
        type: string
      short_url:
        type: string
    type: object
info:
  contact: {}
paths:
  /{shortCode}:
    get:
      description: Redirects to the original URL for the given short code
      parameters:
      - description: Short code
        in: path
        name: shortCode
        required: true
        type: string
      responses:
        "302":
          description: Redirect
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Redirect short URL
      tags:
      - URL
  /delete/{shortCode}:
    delete:
      description: Deletes the short URL by its short code
      parameters:
      - description: Short code
        in: path
        name: shortCode
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete short URL
      tags:
      - URL
  /details/{shortCode}:
    get:
      description: Get metadata about the short URL (original, clicks, expiry)
      parameters:
      - description: Short code
        in: path
        name: shortCode
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShortenResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get URL details
      tags:
      - URL
  /generate-api-key:
    post:
      description: Generates a new API key for authenticated user and saves it in
        the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Generate an API Key
      tags:
      - Auth
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return a JWT token
      parameters:
      - description: User login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user account with email and password
      parameters:
      - description: User registration
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/handlers.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Auth
  /shorten:
    post:
      consumes:
      - application/json
      description: Create a short URL from a long URL, optionally with a custom alias
      parameters:
      - description: URL to shorten
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ShortenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShortenResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Shorten a long URL
      tags:
      - URL
swagger: "2.0"
